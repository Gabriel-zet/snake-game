<!DOCTYPE html>
<html>

<head>
    <title>Jogo da Cobrinha</title>
    <style>
        body {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background-color: #1f1f1f;
            font-family: Arial, sans-serif;
        }

        canvas {
            border: 4px solid #c1c1c1;
            background-color: #262626;
        }

        .snake {
            fill: #4caf50;
            stroke: #1f1f1f;
            stroke-width: 2;
        }

        .food {
            fill: #ff5252;
            stroke: #1f1f1f;
            stroke-width: 2;
        }

        .controls {
            display: flex;
            justify-content: space-between;
            margin-top: 20px;
        }

        .control-button {
            background-color: #4caf50;
            color: #fff;
            padding: 10px 20px;
            font-size: 18px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .control-button:hover {
            background-color: #45a049;
        }
    </style>
</head>

<body>

    <canvas id="snake" width="500" height="400"></canvas>
    <div class="score"><span nome="nome">
            <%= nome %>
        </span> <br>Pontuação: <span id="score" nome="pontuacao">0</span></div>
    <script>
        const canvas = document.getElementById("snake");
        const ctx = canvas.getContext("2d");

        const gridSize = 20;
        const snakeColor = "green";
        const foodColor = "red";

        let snake = [{ x: 10, y: 10 }];
        let food = { x: 5, y: 5 };
        let dx = 1;
        let dy = 0;
        let score = 0;

        function drawSnake() {
            snake.forEach(segment => {
                ctx.fillStyle = snakeColor;
                ctx.fillRect(segment.x * gridSize, segment.y * gridSize, gridSize, gridSize);
            });
        }

        function drawScore() {
            const scoreElement = document.getElementById("score");
            scoreElement.textContent = score;
        }
        function drawFood() {
            ctx.fillStyle = foodColor;
            ctx.fillRect(food.x * gridSize, food.y * gridSize, gridSize, gridSize);
        }

        function moveSnake() {
            const head = { x: snake[0].x + dx, y: snake[0].y + dy };
            snake.unshift(head);

            if (head.x === food.x && head.y === food.y) {
                score += 100;
                generateFood();
            } else {
                snake.pop();
            }
        }


        function generateFood() {
            food.x = Math.floor(Math.random() * (canvas.width / gridSize));
            food.y = Math.floor(Math.random() * (canvas.height / gridSize));
        }

        function enviarPontuacao() {
            const nome = document.querySelector('[nome="nome"]').textContent;
            const pontuacao = document.querySelector('[nome="pontuacao"]').textContent;

            fetch('/atualizar-pontuacao', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    nome: nome,
                    pontuacao: pontuacao,
                }),
            })
                .then(response => response.json())
                .then(data => {
                    console.log(data);
                })
                .catch(error => {
                    console.error('Erro na requisição:', error);
                });
        }


        function checkCollision() {
            const head = snake[0];
            if (head.x < 0 || head.x >= canvas.width / gridSize || head.y < 0 || head.y >= canvas.height / gridSize) {
                alert("Game Over!");
                enviarPontuacao()
                resetGame();
                window.location.href = '/ranking';
            }

            for (let i = 1; i < snake.length; i++) {
                if (head.x === snake[i].x && head.y === snake[i].y) {
                    alert("Game Over!");
                    enviarPontuacao()
                    resetGame();
                }
            }
        }
        function resetGame() {
            snake = [{ x: 10, y: 10 }];
            dx = 1;
            dy = 0;
            generateFood();
            score = 0;
            drawScore();
        }

        function updateGameArea() {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            drawFood();
            drawSnake();
            moveSnake();
            checkCollision();
            drawScore();
        }

        document.addEventListener("keydown", event => {
            switch (event.key) {
                case "ArrowUp":
                    if (dy !== 1) {
                        dx = 0;
                        dy = -1;
                    }
                    break;
                case "ArrowDown":
                    if (dy !== -1) {
                        dx = 0;
                        dy = 1;
                    }
                    break;
                case "ArrowLeft":
                    if (dx !== 1) {
                        dx = -1;
                        dy = 0;
                    }
                    break;
                case "ArrowRight":
                    if (dx !== -1) {
                        dx = 1;
                        dy = 0;
                    }
                    break;
            }
        });

        setInterval(updateGameArea, 100);


    </script>
</body>

</html>